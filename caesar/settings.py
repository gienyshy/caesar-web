"""
Django settings for caesar project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
def project_path(s):
    return os.path.join(BASE_DIR, s)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'iix*r+#bzenhu(*bx$i_&z4(opm9wz*0fpbcvn07@83v9qvw)1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
TEMPLATE_DEBUG = DEBUG

ADMINS = ()
MANAGERS = ADMINS

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'debug_toolbar',
    'review'
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'mit.auth.SSLRemoteUserMiddleware',
    'django_tools.middlewares.ThreadLocal.ThreadLocalMiddleware'
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'mit.auth.SSLRemoteUserBackend',
]

ROOT_URLCONF = 'caesar.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ 
            #project_path('templates') 
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# TEMPLATE_DIRS = (
#     # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
#     # Always use forward slashes, even on Windows.
#     # Don't forget to use absolute paths, not relative paths.

#     project_path('templates'),
# )

WSGI_APPLICATION = 'caesar.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Normalize all incoming URLs by appending a slash if necessary
APPEND_SLASH = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = project_path('apache/collectedstatic')


# URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a
# trailing slash.
# Examples: "http://foo.com/media/", "/media/".
ADMIN_MEDIA_PREFIX = STATIC_URL + 'admin/'



# debug_toolbar setup

def show_debug_toolbar(request):
    return DEBUG

DEBUG_TOOLBAR_CONFIG = {
    'SHOW_TOOLBAR_CALLBACK': show_debug_toolbar,
    'INTERCEPT_REDIRECTS': False,
    'SHOW_TEMPLATE_CONTEXT': False,
}




# EMAIL_HOST = 'localhost'
# DEFAULT_FROM_EMAIL = 'caesar@csail.mit.edu'
# EMAIL_PORT = 25
# EMAIL_SUBJECT_PREFIX = '[Caesar] '
# SERVER_EMAIL = 'Caesar code reviewing system <caesar@csail.mit.edu>'

# # Local time zone for this installation. Choices can be found here:
# # http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# # although not all choices may be available on all operating systems.
# # On Unix systems, a value of None will cause Django to use the same
# # timezone as the operating system.
# # If running in a Windows environment this must be set to the same as your
# # system time zone.
# TIME_ZONE = 'America/New_York'

# # Language code for this installation. All choices can be found here:
# # http://www.i18nguy.com/unicode/language-identifiers.html
# LANGUAGE_CODE = 'en-us'

# SITE_ID = 1

# # List of callables that know how to import templates from various sources.
# TEMPLATE_LOADERS = (
#     'django.template.loaders.filesystem.Loader',
#     'django.template.loaders.app_directories.Loader',
# #     'django.template.loaders.eggs.Loader',
# )

# MIDDLEWARE_CLASSES = (
#     'django.middleware.common.CommonMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'mit.auth.SSLRemoteUserMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'debug_toolbar.middleware.DebugToolbarMiddleware',
#     'django_tools.middlewares.ThreadLocal.ThreadLocalMiddleware'
# )

# # Create settings variables here to be rendered in templates.
# COMMENT_SEARCH = False

# def custom_context_processors(request):
#     return {
#         'COMMENT_SEARCH': COMMENT_SEARCH,
#     }

# TEMPLATE_CONTEXT_PROCESSORS = (
#     'django.contrib.auth.context_processors.auth',
#     'django.core.context_processors.debug',
#     'django.core.context_processors.i18n',
#     'django.core.context_processors.static',
#     'django.core.context_processors.request',
#     'django.contrib.messages.context_processors.messages',
#     'settings.custom_context_processors',
# )

# AUTHENTICATION_BACKENDS = (
#     'django.contrib.auth.backends.ModelBackend',
#     'mit.auth.SSLRemoteUserBackend',
# )


# LOGIN_REDIRECT_URL = '/'
# AUTH_PROFILE_MODULE = 'review.UserProfile'

# PROJECT SPECIFIC SETTINGS
MINIMUM_SNIPPET_LENGTH = 80

# FIXTURE_DIRS = [project_path('fixtures')]




from settings_local import *

# # run tests in memory
# if 'test' in sys.argv:
#     DATABASES['default'] = {'ENGINE': 'django.db.backends.sqlite3'}


# # explained at http://www.tiwoc.de/blog/2013/03/django-prevent-email-notification-on-suspiciousoperation/
# # actual code from http://stackoverflow.com/questions/15238506/djangos-suspiciousoperation-invalid-http-host-header
# from django.core.exceptions import SuspiciousOperation

# def skip_suspicious_operations(record):
#   if record.exc_info:
#     exc_value = record.exc_info[1]
#     if isinstance(exc_value, SuspiciousOperation):
#       return False
#   return True

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'filters': {
#         'require_debug_false': {
#             '()': 'django.utils.log.RequireDebugFalse',
#         },
#         # Define filter
#         'skip_suspicious_operations': {
#             '()': 'django.utils.log.CallbackFilter',
#             'callback': skip_suspicious_operations,
#         },
#     },
#     'handlers': {
#         'mail_admins': {
#             'level': 'ERROR',
#             # Add filter to list of filters
#             'filters': ['require_debug_false', 'skip_suspicious_operations'],
#             'class': 'django.utils.log.AdminEmailHandler'
#         }
#     },
#     'loggers': {
#         'django.request': {
#             'handlers': ['mail_admins'],
#             'level': 'ERROR',
#             'propagate': True,
#         },
#     }
# }
