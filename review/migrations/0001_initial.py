# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-07-18 19:52
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import review.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'assignments',
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'batches',
                'verbose_name_plural': 'batches',
            },
        ),
        migrations.CreateModel(
            name='Chunk',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('cluster_id', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('class_type', models.CharField(blank=True, choices=[(b'ENUM', b'enum'), (b'EXCE', b'exception'), (b'TEST', b'test'), (b'NONE', b'none')], max_length=4, null=True)),
                ('staff_portion', models.IntegerField(default=0)),
                ('student_lines', models.IntegerField(default=0)),
                ('chunk_info', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chunks',
            },
        ),
        migrations.CreateModel(
            name='ChunkReview',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('student_or_alum_reviewers', models.IntegerField(default=0)),
                ('staff_reviewers', models.IntegerField(default=0)),
                ('chunk', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chunk_review', to='review.Chunk')),
            ],
            options={
                'db_table': 'chunkreviews',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('type', models.CharField(choices=[(b'U', b'User'), (b'S', b'Static analysis'), (b'T', b'Test result')], default=b'U', max_length=1)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('edited', models.DateTimeField(blank=True, null=True)),
                ('upvote_count', models.IntegerField(default=0)),
                ('downvote_count', models.IntegerField(default=0)),
                ('thread_id', models.IntegerField(null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='review.Batch')),
                ('chunk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='review.Chunk')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_comments', to='review.Comment')),
                ('similar_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='similar_comments', to='review.Comment')),
            ],
            options={
                'ordering': ['start', '-end', 'thread_id', 'created'],
                'db_table': 'comments',
            },
        ),
        migrations.CreateModel(
            name='Extension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slack_used', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'db_table': 'extensions',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('path', models.CharField(max_length=200)),
                ('data', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'files',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[(b'S', b'student'), (b'T', b'teacher'), (b'V', b'volunteer')], max_length=1)),
                ('slack_budget', models.IntegerField(default=5)),
            ],
            options={
                'db_table': 'members',
            },
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('assigned_date', models.DateTimeField(blank=True, null=True)),
                ('duedate', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=50)),
                ('max_extension', models.IntegerField(default=2)),
                ('type', models.CharField(choices=[(b'S', b'Submit'), (b'R', b'Review')], max_length=1)),
            ],
            options={
                'db_table': 'milestones',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(blank=True, choices=[(b'S', b'Summary'), (b'R', b'Received reply'), (b'C', b'Received comment on submission')], max_length=1)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='review.Comment')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
                'db_table': 'notifications',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, help_text=b'Subject Name. (ex.) Software Construction', max_length=140)),
                ('about', models.CharField(max_length=140, blank=True, help_text=b'Brief description')),
                ('semester', models.CharField(blank=True, max_length=32)),
                ('is_current_semester', models.BooleanField(default=False, verbose_name=b'Is in progress')),
            ],
            options={
                'db_table': 'semesters',
            },
        ),
        migrations.CreateModel(
            name='StaffMarker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_line', models.IntegerField(blank=True, null=True)),
                ('end_line', models.IntegerField(blank=True, null=True)),
                ('chunk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staffmarkers', to='review.Chunk')),
            ],
            options={
                'db_table': 'staffmarkers',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'subjects',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('revision', models.IntegerField(blank=True, null=True)),
                ('revision_date', models.DateTimeField(blank=True, null=True)),
                ('authors', models.ManyToManyField(blank=True, null=True, related_name='submissions', to=settings.AUTH_USER_MODEL)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='review.Batch')),
            ],
            options={
                'db_table': 'submissions',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[(b'N', b'New'), (b'O', b'Opened'), (b'S', b'Started'), (b'C', b'Completed'), (b'U', b'Unfinished')], default=b'N', max_length=1)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('opened', models.DateTimeField(blank=True, null=True)),
                ('started', models.DateTimeField(blank=True, null=True)),
                ('completed', models.DateTimeField(blank=True, null=True)),
                ('chunk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='review.Chunk')),
                ('chunk_review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='review.ChunkReview')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
                ('submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='review.Submission')),
            ],
            options={
                'db_table': 'tasks',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reputation', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'userprofiles',
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.SmallIntegerField(choices=[(1, b'+1'), (-1, b'-1')])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to=settings.AUTH_USER_MODEL)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='review.Comment')),
            ],
            options={
                'db_table': 'votes',
            },
        ),
        migrations.CreateModel(
            name='ReviewMilestone',
            fields=[
                ('milestone_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='review.Milestone')),
                ('reviewers_per_chunk', models.IntegerField(default=2)),
                ('min_student_lines', models.IntegerField(default=30)),
                ('chunks_to_assign', models.TextField(blank=True, null=True)),
                ('chunks_to_exclude', models.TextField(blank=True, null=True)),
                ('student_count', models.IntegerField(default=5)),
                ('student_count_default', models.IntegerField(default=5)),
                ('alum_count', models.IntegerField(default=3)),
                ('alum_count_default', models.IntegerField(default=3)),
                ('staff_count', models.IntegerField(default=10)),
                ('staff_count_default', models.IntegerField(default=10)),
                ('students', models.IntegerField(default=199)),
                ('students_default', models.IntegerField(default=199)),
                ('alums', models.IntegerField(default=1)),
                ('alums_default', models.IntegerField(default=1)),
                ('staff', models.IntegerField(default=15)),
                ('staff_default', models.IntegerField(default=15)),
            ],
            options={
                'db_table': 'reviewmilestones',
            },
            bases=('review.milestone',),
        ),
        migrations.CreateModel(
            name='SubmitMilestone',
            fields=[
                ('milestone_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='review.Milestone')),
            ],
            options={
                'db_table': 'submitmilestones',
            },
            bases=('review.milestone',),
        ),
        migrations.AddField(
            model_name='semester',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to='review.Subject'),
        ),
        migrations.AddField(
            model_name='notification',
            name='submission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='review.Submission'),
        ),
        migrations.AddField(
            model_name='milestone',
            name='assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='review.Assignment'),
        ),
        migrations.AddField(
            model_name='member',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='review.Semester'),
        ),
        migrations.AddField(
            model_name='member',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='file',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='review.Submission'),
        ),
        migrations.AddField(
            model_name='extension',
            name='milestone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extensions', to='review.Milestone'),
        ),
        migrations.AddField(
            model_name='extension',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extensions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chunk',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='review.File'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='semester',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='review.Semester'),
        ),
        migrations.AlterUniqueTogether(
            name='vote',
            unique_together=set([('comment', 'author')]),
        ),
        migrations.AddField(
            model_name='task',
            name='milestone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='review.ReviewMilestone'),
        ),
        migrations.AddField(
            model_name='submission',
            name='milestone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='review.SubmitMilestone'),
        ),
        migrations.AddField(
            model_name='reviewmilestone',
            name='submit_milestone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_milestone', to='review.SubmitMilestone'),
        ),
        migrations.AlterUniqueTogether(
            name='file',
            unique_together=set([('path', 'submission')]),
        ),
        migrations.AlterUniqueTogether(
            name='task',
            unique_together=set([('chunk', 'reviewer')]),
        ),
    ]
